{"data":{"docBySlug":{"html":"<h1 id=\"working-with-bigints\"><a href=\"#working-with-bigints\" aria-label=\"working with bigints permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Working with BigInts</h1>\n<p>Arrow supports big integers.</p>\n<p>If the JavaScript platform supports the recently introduced <code class=\"language-text\">BigInt64Array</code> typed array, Arrow JS will use this type.</p>\n<p>For convenience ArrowJS inject additional methods (on the object instance) that lets it be converted to JSON, strings, values and primitives</p>\n<ul>\n<li><code class=\"language-text\">bigIntArray.toJSON()</code></li>\n<li><code class=\"language-text\">bigIntArray.toString()</code></li>\n<li><code class=\"language-text\">bigIntArray.valueOf()</code></li>\n<li><code class=\"language-text\">bigIntArray[Symbol.toPrimitive](hint: &#39;string&#39; | &#39;number&#39; | &#39;default&#39;)</code></li>\n</ul>\n<h2 id=\"notes-about-conversion-methods\"><a href=\"#notes-about-conversion-methods\" aria-label=\"notes about conversion methods permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notes about Conversion Methods</h2>\n<p>When you have one of the wide numeric types (<code class=\"language-text\">Int64</code>, <code class=\"language-text\">Uint64</code>, or <code class=\"language-text\">Decimal</code> which is 128bit), those <code class=\"language-text\">Vector</code> instances always return/accept subarray slices of the underlying 32bit typed arrays.</p>\n<p>But to make life easier for people consuming the typed arrays, the Arrow JS API adds some <a href=\"https://github.com/apache/arrow/blob/3eb07b7ed173e2ecf41d689b0780dd103df63a00/js/src/util/bn.ts#L31\">extra methods</a> to the typed arrays before they're returned. The goal of these methods is to handle conversion to and from the various primitive types (<code class=\"language-text\">number</code>, <code class=\"language-text\">string</code>, <code class=\"language-text\">bigint</code>, and <code class=\"language-text\">JSON.stringify()</code>) so people usually \"fall into the pit of success\".</p>\n<p>One of the added methods is an implementation of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive\"><code class=\"language-text\">[Symbol.toPrimitive]</code></a>, which JS will use when doing certain kinds of implicit primitive coercion.</p>\n<p> The implementation of these methods is <a href=\"https://github.com/apache/arrow/blob/3eb07b7ed173e2ecf41d689b0780dd103df63a00/js/src/util/bn.ts#L125\">bifurcated</a>, so if you're in an environment with <code class=\"language-text\">BigInt</code> support we use the native type, but if not, we'll make a best-effort attempt to return something meaningful (usually the unsigned decimal representation of the number as a string, though we'd appreciate help if someone knows how to compute the signed decimal representation).</p>\n<p>Examples:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Int64Vector <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'apache-arrow'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> assert <span class=\"token keyword\">from</span> <span class=\"token string\">'assert'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> bigIntArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInt64Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1n</span> <span class=\"token operator\">+</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_SAFE_INTEGER</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> lilIntArr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span>bigIntArr<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>bigIntArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>lilIntArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> bigIntVec <span class=\"token operator\">=</span> Int64Vector<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>bigIntArr<span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>bigIntVec<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> bigIntVal <span class=\"token operator\">=</span> bigIntVec<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>bigIntVal <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>bigIntVal<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>bigIntVal<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">2097152</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// these implicitly call bigIntVal[Symbol.toPrimitive]()</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span> <span class=\"token operator\">+</span> bigIntVal<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'9007199254740992'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// aka bigIntVal[Symbol.toPrimitive]('string')</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> bigIntVal<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">9007199254740992</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// aka bigIntVal[Symbol.toPrimitive]('number')</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0n</span> <span class=\"token operator\">+</span> bigIntVal<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">9007199254740992n</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// aka bigIntVal[Symbol.toPrimitive]('default')```</span></code></pre></div>","timeToRead":2,"excerpt":"Working with BigIntsArrow supports big integers.If the JavaScript platform supports the recently introduced  typed array, Arrow JS will useâ€¦","frontmatter":{"title":"Working with BigInts","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{"../../README.md":"/docs","arrowjs/docs/README.md":"/docs","../..":"/docs","docs":"/docs","../../contributing.md":"/docs/contributing","arrowjs/docs/contributing.md":"/docs/contributing","../../contributing":"/docs/contributing","docs/contributing":"/docs/contributing","../../roadmap.md":"/docs/roadmap","arrowjs/docs/roadmap.md":"/docs/roadmap","../../roadmap":"/docs/roadmap","docs/roadmap":"/docs/roadmap","../../get-started/examples.md":"/docs/get-started/examples","arrowjs/docs/get-started/examples.md":"/docs/get-started/examples","../../get-started/examples":"/docs/get-started/examples","docs/get-started/examples":"/docs/get-started/examples","../../whats-new.md":"/docs/whats-new","arrowjs/docs/whats-new.md":"/docs/whats-new","../../whats-new":"/docs/whats-new","docs/whats-new":"/docs/whats-new","../../get-started/installing.md":"/docs/get-started/installing","arrowjs/docs/get-started/installing.md":"/docs/get-started/installing","../../get-started/installing":"/docs/get-started/installing","docs/get-started/installing":"/docs/get-started/installing","":"/docs/developer-guide/big-ints","arrowjs/docs/developer-guide/big-ints.md":"/docs/developer-guide/big-ints","docs/developer-guide/big-ints":"/docs/developer-guide/big-ints","../data-frame-operations.md":"/docs/developer-guide/data-frame-operations","arrowjs/docs/developer-guide/data-frame-operations.md":"/docs/developer-guide/data-frame-operations","../data-frame-operations":"/docs/developer-guide/data-frame-operations","docs/developer-guide/data-frame-operations":"/docs/developer-guide/data-frame-operations","../converting-data.md":"/docs/developer-guide/converting-data","arrowjs/docs/developer-guide/converting-data.md":"/docs/developer-guide/converting-data","../converting-data":"/docs/developer-guide/converting-data","docs/developer-guide/converting-data":"/docs/developer-guide/converting-data","../memory-management.md":"/docs/developer-guide/memory-management","arrowjs/docs/developer-guide/memory-management.md":"/docs/developer-guide/memory-management","../memory-management":"/docs/developer-guide/memory-management","docs/developer-guide/memory-management":"/docs/developer-guide/memory-management","../data-sources.md":"/docs/developer-guide/data-sources","arrowjs/docs/developer-guide/data-sources.md":"/docs/developer-guide/data-sources","../data-sources":"/docs/developer-guide/data-sources","docs/developer-guide/data-sources":"/docs/developer-guide/data-sources","../predicates.md":"/docs/developer-guide/predicates","arrowjs/docs/developer-guide/predicates.md":"/docs/developer-guide/predicates","../predicates":"/docs/developer-guide/predicates","docs/developer-guide/predicates":"/docs/developer-guide/predicates","../reading-and-writing.md":"/docs/developer-guide/reading-and-writing","arrowjs/docs/developer-guide/reading-and-writing.md":"/docs/developer-guide/reading-and-writing","../reading-and-writing":"/docs/developer-guide/reading-and-writing","docs/developer-guide/reading-and-writing":"/docs/developer-guide/reading-and-writing","../data-types.md":"/docs/developer-guide/data-types","arrowjs/docs/developer-guide/data-types.md":"/docs/developer-guide/data-types","../data-types":"/docs/developer-guide/data-types","docs/developer-guide/data-types":"/docs/developer-guide/data-types","../tables.md":"/docs/developer-guide/tables","arrowjs/docs/developer-guide/tables.md":"/docs/developer-guide/tables","../tables":"/docs/developer-guide/tables","docs/developer-guide/tables":"/docs/developer-guide/tables","../typescript.md":"/docs/developer-guide/typescript","arrowjs/docs/developer-guide/typescript.md":"/docs/developer-guide/typescript","../typescript":"/docs/developer-guide/typescript","docs/developer-guide/typescript":"/docs/developer-guide/typescript","../../api-reference/column.md":"/docs/api-reference/column","arrowjs/docs/api-reference/column.md":"/docs/api-reference/column","../../api-reference/column":"/docs/api-reference/column","docs/api-reference/column":"/docs/api-reference/column","../../api-reference/README.md":"/docs/api-reference","arrowjs/docs/api-reference/README.md":"/docs/api-reference","../../api-reference":"/docs/api-reference","docs/api-reference":"/docs/api-reference","../../api-reference/data-frame.md":"/docs/api-reference/data-frame","arrowjs/docs/api-reference/data-frame.md":"/docs/api-reference/data-frame","../../api-reference/data-frame":"/docs/api-reference/data-frame","docs/api-reference/data-frame":"/docs/api-reference/data-frame","../../api-reference/dictionary.md":"/docs/api-reference/dictionary","arrowjs/docs/api-reference/dictionary.md":"/docs/api-reference/dictionary","../../api-reference/dictionary":"/docs/api-reference/dictionary","docs/api-reference/dictionary":"/docs/api-reference/dictionary","../../api-reference/field.md":"/docs/api-reference/field","arrowjs/docs/api-reference/field.md":"/docs/api-reference/field","../../api-reference/field":"/docs/api-reference/field","docs/api-reference/field":"/docs/api-reference/field","../../api-reference/predicates.md":"/docs/api-reference/predicates","arrowjs/docs/api-reference/predicates.md":"/docs/api-reference/predicates","../../api-reference/predicates":"/docs/api-reference/predicates","docs/api-reference/predicates":"/docs/api-reference/predicates","../../api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","arrowjs/docs/api-reference/record-batch-reader.md":"/docs/api-reference/record-batch-reader","../../api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","docs/api-reference/record-batch-reader":"/docs/api-reference/record-batch-reader","../../api-reference/row.md":"/docs/api-reference/row","arrowjs/docs/api-reference/row.md":"/docs/api-reference/row","../../api-reference/row":"/docs/api-reference/row","docs/api-reference/row":"/docs/api-reference/row","../../api-reference/record-batch.md":"/docs/api-reference/record-batch","arrowjs/docs/api-reference/record-batch.md":"/docs/api-reference/record-batch","../../api-reference/record-batch":"/docs/api-reference/record-batch","docs/api-reference/record-batch":"/docs/api-reference/record-batch","../../api-reference/schema.md":"/docs/api-reference/schema","arrowjs/docs/api-reference/schema.md":"/docs/api-reference/schema","../../api-reference/schema":"/docs/api-reference/schema","docs/api-reference/schema":"/docs/api-reference/schema","../../api-reference/struct-vector.md":"/docs/api-reference/struct-vector","arrowjs/docs/api-reference/struct-vector.md":"/docs/api-reference/struct-vector","../../api-reference/struct-vector":"/docs/api-reference/struct-vector","docs/api-reference/struct-vector":"/docs/api-reference/struct-vector","../../api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","arrowjs/docs/api-reference/record-batch-writer.md":"/docs/api-reference/record-batch-writer","../../api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","docs/api-reference/record-batch-writer":"/docs/api-reference/record-batch-writer","../../api-reference/types.md":"/docs/api-reference/types","arrowjs/docs/api-reference/types.md":"/docs/api-reference/types","../../api-reference/types":"/docs/api-reference/types","docs/api-reference/types":"/docs/api-reference/types","../../api-reference/data.md":"/docs/api-reference/data","arrowjs/docs/api-reference/data.md":"/docs/api-reference/data","../../api-reference/data":"/docs/api-reference/data","docs/api-reference/data":"/docs/api-reference/data","../../api-reference/vector.md":"/docs/api-reference/vector","arrowjs/docs/api-reference/vector.md":"/docs/api-reference/vector","../../api-reference/vector":"/docs/api-reference/vector","docs/api-reference/vector":"/docs/api-reference/vector","../../api-reference/table.md":"/docs/api-reference/table","arrowjs/docs/api-reference/table.md":"/docs/api-reference/table","../../api-reference/table":"/docs/api-reference/table","docs/api-reference/table":"/docs/api-reference/table","../../api-reference/vectors.md":"/docs/api-reference/vectors","arrowjs/docs/api-reference/vectors.md":"/docs/api-reference/vectors","../../api-reference/vectors":"/docs/api-reference/vectors","docs/api-reference/vectors":"/docs/api-reference/vectors","../../api-reference/chunked.md":"/docs/api-reference/chunked","arrowjs/docs/api-reference/chunked.md":"/docs/api-reference/chunked","../../api-reference/chunked":"/docs/api-reference/chunked","docs/api-reference/chunked":"/docs/api-reference/chunked"},"slug":"docs/developer-guide/big-ints","toc":"docs"}}