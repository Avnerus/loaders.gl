{"data":{"docBySlug":{"html":"<h1 id=\"apache-arrow-javascript-api-reference\"><a href=\"#apache-arrow-javascript-api-reference\" aria-label=\"apache arrow javascript api reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Apache Arrow JavaScript API Reference</h1>\n<h2 id=\"class-list\"><a href=\"#class-list\" aria-label=\"class list permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class List</h2>\n<blockquote>\n<p>TODO - This is a class list from the C++ docs, it has only been partially updated to match JS API</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>Class</th>\n<th>Summary</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">Array</code></td>\n<td>Array base type Immutable data array with some logical type and some length</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ArrayData</code></td>\n<td>Mutable container for generic Arrow array data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">BinaryArray</code></td>\n<td>Concrete Array class for variable-size binary data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">BooleanArray</code></td>\n<td>Concrete Array class for boolean data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Buffer</code></td>\n<td>Object containing a pointer to a piece of contiguous  memory with a particular size</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ChunkedArray</code></td>\n<td>A data structure managing a list of primitive Arrow arrays logically as one large array</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Column</code></td>\n<td>An immutable column data structure consisting of a field (type metadata) and a chunked data array</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Decimal128</code></td>\n<td>Represents a signed 128-bit integer in two's  complement</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Decimal128Array</code></td>\n<td>Concrete Array class for 128-bit decimal data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">DictionaryArray</code></td>\n<td>Concrete Array class for dictionary data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Field</code></td>\n<td>The combination of a field name and data type, with  optional metadata</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">FixedSizeBinaryArray</code></td>\n<td>Concrete Array class for fixed-size  binary data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">FixedWidthType</code></td>\n<td>Base class for all fixed-width data types</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">FlatArray</code></td>\n<td>Base class for non-nested arrays</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">FloatingPoint</code></td>\n<td>Base class for all floating-point data types</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Int16Type</code></td>\n<td>Concrete type class for signed 16-bit integer data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Int32Type</code></td>\n<td>Concrete type class for signed 32-bit integer data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Int64Type</code></td>\n<td>Concrete type class for signed 64-bit integer data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Int8Type</code></td>\n<td>Concrete type class for signed 8-bit integer data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Integer</code></td>\n<td>Base class for all integral data types</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ListArray</code></td>\n<td>Concrete Array class for list data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">ListType</code></td>\n<td>Concrete type class for list data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">NestedType</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">NullArray</code></td>\n<td>Degenerate null type Array</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">NullType</code></td>\n<td>Concrete type class for always-null data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Number</code></td>\n<td>Base class for all numeric data types</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">NumericArray</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">PrimitiveArray</code></td>\n<td>Base class for arrays of fixed-size logical  types</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">RecordBatch</code></td>\n<td>Collection of equal-length arrays matching a  particular Schema</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">RecordBatchReader</code></td>\n<td>Abstract interface for reading stream of  record batches</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Schema</code></td>\n<td>Sequence of arrow::Field objects describing the  columns of a record batch or table data structure</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Status</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">StringArray</code></td>\n<td>Concrete Array class for variable-size string ( utf-8) data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">StructArray</code></td>\n<td>Concrete Array class for struct data</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Table</code></td>\n<td>Logical table as sequence of chunked arrays</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">TableBatchReader</code></td>\n<td>Compute a sequence of record batches from a ( possibly chunked) Table</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">TimeUnit</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">UnionArray</code></td>\n<td>Concrete Array class for union data</td>\n</tr>\n</tbody>\n</table>","timeToRead":3,"excerpt":"Apache Arrow JavaScript API ReferenceClass ListTODO - This is a class list from the C++ docs, it has only been partially updated to match JSâ€¦","frontmatter":{"title":"Apache Arrow JavaScript API Reference","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{},"slug":"docs/api-reference","toc":"docs"}}