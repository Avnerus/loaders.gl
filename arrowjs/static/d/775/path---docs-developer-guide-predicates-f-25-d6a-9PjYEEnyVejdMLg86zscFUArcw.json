{"data":{"docBySlug":{"html":"<h1 id=\"using-predicates\"><a href=\"#using-predicates\" aria-label=\"using predicates permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Predicates</h1>\n<p>The Arrow API provides standard predicates that allow for the comparison of column values against literals (equality, greater or equal than, less or eqial than) as well as the creation of composite logical expressions (<code class=\"language-text\">and</code>, <code class=\"language-text\">or</code> and <code class=\"language-text\">not</code>) out of individual column comparisons.</p>\n<p>It is of course also possible to write custom predicates, however the performance is best when using the built-ins. Note that for performance reasons, filters are specified using \"predicates\" rather than custom JavaScript functions. For details on available predicates see <a href=\"\">Using Predicates</a>.</p>\n<h2 id=\"filtering-using-predicates\"><a href=\"#filtering-using-predicates\" aria-label=\"filtering using predicates permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filtering using Predicates</h2>\n<blockquote>\n<p>Note that calling <code class=\"language-text\">filter()</code> on a <code class=\"language-text\">DataFrame</code> doesn't actually do anything (other than store the predicates). It's not until you call <code class=\"language-text\">countBy()</code> or <code class=\"language-text\">scan()</code> on the resulting object that Arrow actually scans through all of the data.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">table <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>arrow<span class=\"token punctuation\">.</span>predicate<span class=\"token punctuation\">.</span><span class=\"token function\">col</span><span class=\"token punctuation\">(</span><span class=\"token string\">'winnername'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>winner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","timeToRead":1,"excerpt":"Using Predicates The Arrow API provides standard predicates that allow for the comparison of column values against literals (equalityâ€¦","frontmatter":{"title":"Using Predicates","cover":"cover","category":"docs","tags":["default"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"relativeLinks":{},"slug":"docs/developer-guide/predicates","toc":"docs"}}